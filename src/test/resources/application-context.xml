<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com.ehabibov.context"/>
    <bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:browsers/*.properties</value>
            </list>
        </property>
        <property name="trimValues" value="true"/>
        <property name="nullValue" value="nil"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    <bean id="contextProvider" class="com.ehabibov.context.ApplicationContextProvider"/>

    <bean id="applicationConfig" class="com.ehabibov.driver.config.ApplicationConfig"
          p:applicationHost="${application.host}"
          p:applicationPort="${application.port}"
          p:browserType="${browser.type}"
          p:remoteDriver="${remote.driver}"/>

    <bean name="driverManager" class="com.ehabibov.driver.manager.DriverManagerFactory" init-method="getObject"
          p:driverType="${browser.type}"/>

    <bean id="remoteDriverManager" class="com.ehabibov.driver.manager.browser.RemoteDriverManager"
          p:hubUrl="${remote.driver.url:http://localhost:4444/wd/hub}"/>

    <bean id="commonDriverBinaryConfig" class="com.ehabibov.driver.binary.CommonDriverBinaryConfig"
          p:browserType="${browser.type}"
          p:driverBinaryFolder="${browser.binary.folder.path}"
          p:desiredDriverVersion="${browser.binary.target.version:nil}"
          p:desiredDriverPlatform="${browser.binary.target.platform:LINUX}"
          p:desiredBinaryArchitecture="${browser.binary.target.architecture:DEFAULT}"
          p:targetBrowserPath="${browser.binary.browser.path:nil}"
          p:binaryDownloadTimeout="${browser.binary.download.timeout.seconds:10}"
          p:driverVersionAsJavaPreferenceTtl="${browser.binary.jvm.preference.ttl.seconds:3600}"
          p:binariesRepositoryUrl="${browser.binary.custom.repository.url:nil}"
          p:gitHubTokenName="${browser.binary.download.github.token.name:nil}"
          p:getGitHubTokenSecret="${browser.binary.download.github.token.secret:nil}"
          p:proxySocket="${browser.binary.download.proxy.socket:nil}"
          p:proxyUser="${browser.binary.download.proxy.user:nil}"
          p:proxyPass="${browser.binary.download.proxy.pass:nil}"/>

    <bean id="safariDriverBinaryConfig" class="com.ehabibov.driver.binary.SafariDriverBinaryConfig"
          c:driverBinaryFolder="${browser.binary.folder.path.safari}"/>



    <bean id="chromeDriverConfig" class="com.ehabibov.driver.config.browser.ChromeDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${chrome.start.arguments}'.split(',')}"/>

    <bean id="firefoxDriverConfig" class="com.ehabibov.driver.config.browser.FirefoxDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${firefox.start.arguments}'.split(',')}"/>

    <bean id="operaDriverConfig" class="com.ehabibov.driver.config.browser.OperaDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${opera.start.arguments}'.split(',')}"/>

    <bean id="internetExplorerDriverConfig" class="com.ehabibov.driver.config.browser.InternetExplorerDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${ie.start.arguments}'.split(',')}"/>

    <bean id="edgeDriverConfig" class="com.ehabibov.driver.config.browser.EdgeDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${edge.start.arguments}'.split(',')}"/>

    <bean id="safariDriverConfig" class="com.ehabibov.driver.config.browser.SafariDriverConfig"
          p:port="${browser.driver.port}"
          p:args="#{'${safari.start.arguments}'.split(',')}"/>



    <bean id="chromeDriverManager" class="com.ehabibov.driver.manager.browser.ChromeDriverManager"
          p:binaryConfig-ref="commonDriverBinaryConfig"/>

    <bean id="firefoxDriverManager" class="com.ehabibov.driver.manager.browser.FirefoxDriverManager"
          p:binaryConfig-ref="commonDriverBinaryConfig"
          p:firefoxDriverConfig-ref="firefoxDriverConfig"/>

    <bean id="operaDriverManager" class="com.ehabibov.driver.manager.browser.OperaDriverManager"
          p:binaryConfig-ref="commonDriverBinaryConfig"
          p:operaDriverConfig-ref="operaDriverConfig"/>

    <bean id="internetExplorerDriverManager" class="com.ehabibov.driver.manager.browser.InternetExplorerDriverManager"
          p:binaryConfig-ref="commonDriverBinaryConfig"
          p:internetExplorerDriverConfig-ref="internetExplorerDriverConfig"/>

    <bean id="edgeDriverManager" class="com.ehabibov.driver.manager.browser.EdgeDriverManager"
          p:binaryConfig-ref="commonDriverBinaryConfig"
          p:edgeDriverConfig-ref="edgeDriverConfig"/>

    <bean id="safariDriverManager" class="com.ehabibov.driver.manager.browser.SafariDriverManager"
          p:binaryConfig-ref="safariDriverBinaryConfig"
          p:safariDriverConfig-ref="safariDriverConfig"/>



    <bean id="chromeOptionsHolder" class="com.ehabibov.driver.config.browser.ChromeOptionsHolder"
          p:acceptInsecureCerts="${chrome.option.accept.insecure.certs:false}"
          p:strictFileInteractability="${chrome.option.strict.file.interactability:false}"
          p:unhandledPromptBehaviour="${chrome.option.unhandled.prompt.behaviour:dismiss}"
          p:pageLoadStrategy="${chrome.option.page.load.strategy:normal}"
          p:headless="${chrome.option.headless:false}"
          p:extensions="#{'${chrome.option.extension.paths:nil}'.split(',')}"
          p:capabilities="#{'${chrome.option.capabilities:nil}'.split(',')}"
          p:arguments="#{'${chrome.option.start.arguments:nil}'.split(',')}"/>

    <bean id="remoteOptionsHolder" class="com.ehabibov.driver.config.browser.RemoteOptionsHolder"
          p:browserType="${browser.type:chrome}"
          p:browserVersion="${remote.browser.version:78}"
          p:enableLogging="${remote.logging.enabled:true}"
          p:enableRecording="${remote.recording.enabled:true}"
          p:enableVNC="${remote.vnc.enabled:true}"
          p:executionName="${remote.test.run.name:Generic execution}"
          p:recordingFramerate="${remote.recording.framerate:24}"/>

    <bean id="proxy" class="org.openqa.selenium.Proxy"
          p:autodetect="false"
          p:ftpProxy=""
          p:httpProxy=""
          p:noProxy=""
          p:proxyType="AUTODETECT"
          p:proxyAutoconfigUrl=""
          p:socksProxy=""
          p:socksVersion=""
          p:socksUsername=""
          p:socksPassword=""
          p:sslProxy=""/>
</beans>